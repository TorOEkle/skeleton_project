[32m2025-06-27 08:42:17 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - b71a4d91-9911-4caf-b5ea-d40cff85efa7 - 53890 - LOGS_CAPTURED - Started capturing logs in process (pid: 53890).
[32m2025-06-27 08:42:17 +0200[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - b71a4d91-9911-4caf-b5ea-d40cff85efa7 - 53890 - simulate_data - STEP_START - Started execution of step "simulate_data".
[32m2025-06-27 08:42:17 +0200[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB - b71a4d91-9911-4caf-b5ea-d40cff85efa7 - 53890 - simulate_data - STEP_FAILURE - Execution of step "simulate_data" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "simulate_data"::

duckdb.duckdb.IOException: IO Error: Cannot open file "/data/demo_database.duckdb": No such file or directory

Stack Trace:
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/utils.py", line 56, in op_execution_error_boundary
    yield
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/dagster/_utils/__init__.py", line 392, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 129, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 117, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ekltn/Documents/skeleton-project/dagster/assets/demo_assets.py", line 22, in simulate_data
    with duckdb.get_connection() as conn:
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ekltn/Documents/skeleton-project/dagster/resources/drivers.py", line 17, in get_connection
    return duckdb.connect(self.database)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[0m
